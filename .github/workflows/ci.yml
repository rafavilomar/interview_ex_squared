name: CI

on:
  push:
    branches:
      - '**'

jobs:
  
  format:
    runs-on: ubuntu-20.04
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Validating format...
        run: |
          npm ci
          npm run lint
          npm run format
      - name: Check for formatting changes
        id: check_changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Commit and push changes if any
        if: env.changes_detected == 'true'
        run: |
          git add .
          git commit -m "chore: auto-format code"
          git push origin HEAD:${{ github.ref }}

  test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Building...
        run: |
          npm ci 
          npm run build
      - name: Testing...
        run: |
          npm ci 
          npm run test

  image:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Building...
        run: |
          npm ci 
          npm run build
      - name: Creating service image...
        run: docker build .
